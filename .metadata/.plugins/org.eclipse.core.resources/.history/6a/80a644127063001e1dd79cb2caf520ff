package com.lcwd.user.service.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.lcwd.user.service.entities.User;
import com.lcwd.user.service.payloads.ApiResponse;
import com.lcwd.user.service.services.UserService;

@RestController
@RequestMapping("/users")
@SuppressWarnings("unused")
public class UserController {

	@Autowired
	private UserService userService;
	
	
	//create
	@PostMapping("/")
	public ResponseEntity<User> createUser(@RequestBody User user){
		User savedUser = this.userService.saveUser(user);
		return new ResponseEntity<User>(savedUser, HttpStatus.CREATED);
	}
	
	//get single user
	@GetMapping("/{userId}")
	public ResponseEntity<User> getUser(@PathVariable String userId){
		User user = this.userService.getUser(userId);
		return new ResponseEntity<User>(user, HttpStatus.OK);
	}
	
	//get all users
	@GetMapping("/")
	public ResponseEntity<List<User>> getAllUsers(){
		List<User> allUsers = this.userService.getAllUsers();
		return new ResponseEntity<List<User>>(allUsers, HttpStatus.OK);
	}
	
	//delete user
	@DeleteMapping("/{userId}")
	public ResponseEntity<ApiResponse> deleteUser(@PathVariable String userId){
		this.userService.deleteUser(userId);
		ApiResponse apiResponse = ApiResponse.builder().message("User Deleted Successfully").success(true).status(HttpStatus.OK).build();
		return new ResponseEntity<ApiResponse>(apiResponse, HttpStatus.OK);
	}
	
	//update user
	@PutMapping("/{userId}")
	public ResponseEntity<User> updateUser(@RequestBody User user, @PathVariable String userId){
		User updatedUser = this.userService.updateUser(user, userId);
		return new ResponseEntity<User>(updatedUser, HttpStatus.OK);
	}
}
